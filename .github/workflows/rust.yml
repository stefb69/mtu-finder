name: Rust Build and Release

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            executable: mtu-finder.exe
          - os: macos-latest
            executable: mtu-finder
          - os: ubuntu-latest
            executable: mtu-finder
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      run: rustup default stable

    - name: Tests
      run: cargo test

    - name: Build
      run: cargo build --release --verbose

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.executable }}
        path: target/release/${{ matrix.executable }}

    - name: Package Source Code
      if: startsWith(github.ref, 'refs/tags/') && runner.os == 'Linux'
      run: zip -r source_code.zip . -x "target/*" -x ".git/*"
      shell: bash

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Executable
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/${{ matrix.executable }}
        asset_name: ${{ matrix.executable }}
        asset_content_type: application/octet-stream

    - name: Upload Source Code Zip
      if: startsWith(github.ref, 'refs/tags/') && runner.os == 'Linux'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./source_code.zip
        asset_name: source_code.zip
        asset_content_type: application/zip

